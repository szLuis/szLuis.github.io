{"map":"{\"version\":3,\"sources\":[\"/home/szluis/devs/my-web/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/szluis/devs/my-web/src/logo.svg\",\"/home/szluis/devs/my-web/src/components/About.js\",\"/home/szluis/devs/my-web/src/components/Contact.js\",\"/home/szluis/devs/my-web/src/App.js\",\"/home/szluis/devs/my-web/src/serviceWorker.js\",\"/home/szluis/devs/my-web/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"About\",\"react_default\",\"a\",\"createElement\",\"Component\",\"Contact\",\"Index\",\"App\",\"BrowserRouter\",\"className\",\"Link\",\"to\",\"Route\",\"path\",\"exact\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qNCQzBC,mLAJP,OAAYC,EAAAC,EAAAC,cAAA,IAAA,KAAA,mCAFAC,EAAAA,WCaLC,mLAVP,OACIJ,EAAAC,EAAAC,cAAA,KAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,oBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,iBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,6BAPMC,EAAAA,WCKhBE,EAAQ,WAAA,OAAML,EAAAC,EAAAC,cAAA,KAAA,KAAA,SA+BLI,EA3BJ,WAAA,OACTN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,MAAA,CAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFV,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEFV,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,YAAT,cAKNV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjCL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWf,IAChCC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWV,OClBpBW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\n\\nclass About extends Component {\\n    render() {\\n        return (    <p>I'm a software developer</p>        )\\n    }\\n}\\n\\nexport default About;\",\"import React, { Component } from 'react';\\n\\nclass Contact extends Component {\\n    render() {\\n\\n        return (\\n            <ul>\\n                <li>twitter @_szluis</li>\\n                <li>Gmail szluis0</li>\\n                <li>Instagram _szluis</li>\\n            </ul>\\n        )\\n    }\\n}\\n\\nexport default Contact;\",\"import React, { Component } from 'react';\\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport About from './components/About';\\nimport Contact from './components/Contact';\\n\\nconst Index = () => <h2>Home</h2>;\\n// const About = () => <h2>About me</h2>;\\n// const Contact = () => <h2>Contact</h2>;\\n\\nconst App= () => (\\n  <Router>\\n    <div className=\\\"App\\\">\\n      <nav>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/\\\">Home</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/about\\\">About</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/contact\\\">Contact</Link>\\n          </li>\\n        </ul>\\n      </nav>\\n\\n      <Route path=\\\"/\\\" exact component={Index} />\\n      <Route path=\\\"/about\\\" component={About} />\\n      <Route path=\\\"/contact\\\" component={Contact} />\\n\\n    </div>\\n  </Router>\\n)\\n\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){e.exports=n(27)},19:function(e,t,n){},21:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},22:function(e,t,n){},27:function(e,t,n){\"use strict\";n.r(t);var a=n(1),l=n.n(a),o=n(12),c=n.n(o),r=(n(19),n(31)),i=n(29),u=n(30),m=(n(21),n(22),n(5)),s=n(6),p=n(9),E=n(7),h=n(10),d=function(e){function t(){return Object(m.a)(this,t),Object(p.a)(this,Object(E.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"p\",null,\"I'm a software developer\")}}]),t}(a.Component),f=function(e){function t(){return Object(m.a)(this,t),Object(p.a)(this,Object(E.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"ul\",null,l.a.createElement(\"li\",null,\"twitter @_szluis\"),l.a.createElement(\"li\",null,\"Gmail szluis0\"),l.a.createElement(\"li\",null,\"Instagram _szluis\"))}}]),t}(a.Component),b=function(){return l.a.createElement(\"h2\",null,\"Home\")},w=function(){return l.a.createElement(r.a,null,l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(\"nav\",null,l.a.createElement(\"ul\",null,l.a.createElement(\"li\",null,l.a.createElement(i.a,{to:\"/\"},\"Home\")),l.a.createElement(\"li\",null,l.a.createElement(i.a,{to:\"/about\"},\"About\")),l.a.createElement(\"li\",null,l.a.createElement(i.a,{to:\"/contact\"},\"Contact\")))),l.a.createElement(u.a,{path:\"/\",exact:!0,component:b}),l.a.createElement(u.a,{path:\"/about\",component:d}),l.a.createElement(u.a,{path:\"/contact\",component:f})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(l.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[14,2,1]]]);","extractedComments":[]}